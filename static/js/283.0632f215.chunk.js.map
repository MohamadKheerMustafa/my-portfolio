{"version":3,"file":"static/js/283.0632f215.chunk.js","mappings":"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","sources":["components/projects/ProjectSingle.jsx","components/projects/ProjectsFilter.jsx","components/projects/ProjectsGrid.jsx","data/projects.js","context/ProjectsContext.jsx","pages/Projects.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport useThemeSwitcher from \"../../hooks/useThemeSwitcher\";\r\n\r\nconst ProjectSingle = ({\r\n  title,\r\n  category,\r\n  image,\r\n  link,\r\n  id,\r\n  avaliable,\r\n  des,\r\n}) => {\r\n\r\n  const handleAvaliable = (avaliable) => {\r\n    if (avaliable == true) {\r\n      return (\r\n        <a href={link} key={id} target=\"__blank\">\r\n          <div className=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark\">\r\n            {/* <div>\r\n              <img\r\n                src={image}\r\n                className=\"rounded-t-xl border-none\"\r\n                alt=\"Single Project\"\r\n              />\r\n            </div> */}\r\n            <div className=\"text-center px-4 py-6\">\r\n              <p className=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">\r\n                {title}\r\n              </p>\r\n              <span className=\"text-lg text-ternary-dark dark:text-ternary-light break-all\">\r\n                {category}\r\n              </span>\r\n              <span className=\"text-lg text-ternary-dark dark:text-ternary-light\">\r\n                {des}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      );\r\n    } else\r\n      return (\r\n        <div\r\n          className=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark\"\r\n          onClick={() =>\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"Repository isn't avaliable\",\r\n              text: \"company privacy reasons\",\r\n              timer: 2000,\r\n              background:\r\n                localStorage.getItem(\"theme\") === \"dark\" ? \"#0D2438\" : \"white\",\r\n              color:\r\n                localStorage.getItem(\"theme\") === \"dark\" ? \"white\" : \"black\",\r\n            })\r\n          }\r\n        >\r\n          {/* <div>\r\n            <img\r\n              src={image}\r\n              className=\"rounded-t-xl border-none\"\r\n              alt=\"Single Project\"\r\n            />\r\n          </div> */}\r\n          <div className=\"text-center px-4 py-6\">\r\n            <p className=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">\r\n              {title}\r\n            </p>\r\n            <span className=\"text-lg text-ternary-dark dark:text-ternary-light\">\r\n              {category}\r\n            </span>\r\n            <br />\r\n            <span className=\"text-sm text-ternary-dark dark:text-ternary-light\">\r\n              {des}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1, delay: 1 }}\r\n      transition={{\r\n        ease: \"easeInOut\",\r\n        duration: 0.7,\r\n        delay: 0.15,\r\n      }}\r\n    >\r\n      {/* <Link to=\"/projects/single-project\" aria-label=\"Single Project\"> */}\r\n      {handleAvaliable(avaliable)}\r\n      {/* </Link> */}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ProjectSingle;\r\n","const selectOptions = [\r\n\t'Web Application',\r\n\t'Mobile Application',\r\n\t'UI/UX Design',\r\n\t'Branding',\r\n];\r\n\r\nconst ProjectsFilter = ({ setSelectProject }) => {\r\n\treturn (\r\n\t\t<select\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tsetSelectProject(e.target.value);\r\n\t\t\t}}\r\n\t\t\tclassName=\"font-general-medium \r\n                px-4\r\n                sm:px-6\r\n                py-2\r\n                border\r\n                dark:border-secondary-dark\r\n                rounded-lg\r\n                text-sm\r\n                sm:text-md\r\n                dark:font-medium\r\n                bg-secondary-light\r\n                dark:bg-ternary-dark\r\n                text-primary-dark\r\n                dark:text-ternary-light\r\n            \"\r\n\t\t>\r\n\t\t\t<option value={setSelectProject} className=\"text-sm sm:text-md\">\r\n\t\t\t\tAll Projects\r\n\t\t\t</option>\r\n\r\n\t\t\t{selectOptions.map((option) => (\r\n\t\t\t\t<option className=\"text-normal sm:text-md\" key={option}>\r\n\t\t\t\t\t{option}\r\n\t\t\t\t</option>\r\n\t\t\t))}\r\n\t\t</select>\r\n\t);\r\n};\r\n\r\nexport default ProjectsFilter;\r\n","import { useContext } from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport ProjectSingle from \"./ProjectSingle\";\r\nimport { ProjectsContext } from \"../../context/ProjectsContext\";\r\nimport ProjectsFilter from \"./ProjectsFilter\";\r\n\r\nconst ProjectsGrid = () => {\r\n  const {\r\n    projects,\r\n    searchProject,\r\n    setSearchProject,\r\n    searchProjectsByTitle,\r\n    selectProject,\r\n    setSelectProject,\r\n    // selectProjectsByCategory,\r\n  } = useContext(ProjectsContext);\r\n\r\n  return (\r\n    <section className=\"py-5 sm:py-10 mt-5 sm:mt-10\">\r\n      <div className=\"text-center\">\r\n        <p className=\"font-general-medium text-2xl sm:text-4xl mb-1 text-ternary-dark dark:text-ternary-light\">\r\n          Projects portfolio\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mt-10 sm:mt-16\">\r\n        <h3\r\n          className=\"font-general-regular \r\n                        text-center text-secondary-dark\r\n                        dark:text-ternary-light\r\n                        text-md\r\n                        sm:text-xl\r\n                        mb-3\r\n                        \"\r\n        >\r\n          Search projects by title\r\n        </h3>\r\n        <div\r\n          className=\"\r\n                        flex\r\n                        justify-between\r\n                        border-b border-primary-light\r\n                        dark:border-secondary-dark\r\n                        pb-3\r\n                        gap-3\r\n                        \"\r\n        >\r\n          <div className=\"flex justify-between gap-2\">\r\n            <span\r\n              className=\"\r\n                                hidden\r\n                                sm:block\r\n                                bg-primary-light\r\n                                dark:bg-ternary-dark\r\n                                p-2.5\r\n                                shadow-sm\r\n                                rounded-xl\r\n                                cursor-pointer\r\n                                \"\r\n            >\r\n              <FiSearch className=\"text-ternary-dark dark:text-ternary-light w-5 h-5\"></FiSearch>\r\n            </span>\r\n            <input\r\n              onChange={(e) => {\r\n                setSearchProject(e.target.value);\r\n              }}\r\n              className=\"font-general-medium \r\n                                pl-3\r\n                                pr-1\r\n                                sm:px-4\r\n                                py-2\r\n                                border \r\n                            border-gray-200\r\n                                dark:border-secondary-dark\r\n                                rounded-lg\r\n                                text-sm\r\n                                sm:text-md\r\n                                bg-secondary-light\r\n                                dark:bg-ternary-dark\r\n                                text-primary-dark\r\n                                dark:text-ternary-light\r\n                                \"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"search\"\r\n              required=\"\"\r\n              placeholder=\"Search Projects\"\r\n              aria-label=\"Name\"\r\n            />\r\n          </div>\r\n\r\n          {/* <ProjectsFilter setSelectProject={setSelectProject} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 mt-6 sm:gap-10\">\r\n        {searchProject\r\n          ? searchProjectsByTitle.map((project) => (\r\n              <ProjectSingle\r\n                title={project.title}\r\n                category={project.category}\r\n                image={project.img}\r\n                key={project.id}\r\n                link={project.link}\r\n                avaliable={project.avaliable}\r\n                des={project.des}\r\n              />\r\n            ))\r\n          : projects.map((project) => (\r\n              <ProjectSingle\r\n                title={project.title}\r\n                category={project.category}\r\n                image={project.img}\r\n                key={project.id}\r\n                link={project.link}\r\n                avaliable={project.avaliable}\r\n                des={project.des}\r\n              />\r\n            ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProjectsGrid;\r\n","// Import images\r\nimport WebImage1 from '../images/web-project-1.jpg';\r\nimport WebImage2 from '../images/web-project-2.jpg';\r\n\r\nexport const projectsData = [\r\n\t{\r\n\t\tid: 1,\r\n\t\ttitle: 'Airline Reservation System',\r\n\t\tcategory: 'Web Application',\r\n\t\timg: WebImage2,\r\n\t\tlink: 'https://github.com/MohamadKheerMustafa/airline-reservation-system',\r\n\t\tavaliable: true,\r\n\t\tProjectHeader: {\r\n\t\t\ttitle: 'Project Management UI - From Context',\r\n\t\t\tpublishDate: 'Jul 26, 2021',\r\n\t\t\ttags: 'UI / Frontend',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ttitle: 'Hope Road Ticket Booking',\r\n\t\tcategory: 'Web Application',\r\n\t\timg: WebImage1,\r\n\t\tlink: 'https://github.com/MohamadKheerMustafa/hope-road',\r\n\t\tavaliable: true\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\ttitle: 'CRWN Ecommerce',\r\n\t\tcategory: 'Web Application',\r\n\t\timg: WebImage1,\r\n\t\tlink: 'https://github.com/MohamadKheerMustafa/crwn-ecommerce',\r\n\t\tavaliable: true\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\ttitle: 'Media Nas',\r\n\t\tcategory: 'Web Application and mobile App',\r\n\t\timg: WebImage1,\r\n\t\tlink: 'https://play.google.com/store/apps/details?id=com.maalialkhair.media&hl=en_GB&gl=US',\r\n\t\tdes: 'Socail Media App',\r\n\t\tavaliable: false\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\ttitle: 'Yatafaqhoo religon web site',\r\n\t\tcategory: 'Web Application',\r\n\t\timg: WebImage1,\r\n\t\tlink: '',\r\n\t\tdes: 'religon lectures and books with savants',\r\n\t\tavaliable: false\r\n\t},\r\n];\r\n","import { useState, createContext } from 'react';\r\nimport { projectsData } from '../data/projects';\r\n\r\n// Create projects context\r\nexport const ProjectsContext = createContext();\r\n\r\n// Create the projects context provider\r\nexport const ProjectsProvider = (props) => {\r\n\tconst [projects, setProjects] = useState(projectsData);\r\n\tconst [searchProject, setSearchProject] = useState('');\r\n\tconst [selectProject, setSelectProject] = useState('');\r\n\r\n\t// Search projects by project title\r\n\tconst searchProjectsByTitle = projects.filter((item) => {\r\n\t\tconst result = item.title\r\n\t\t\t.toLowerCase()\r\n\t\t\t.includes(searchProject.toLowerCase())\r\n\t\t\t? item\r\n\t\t\t: searchProject === ''\r\n\t\t\t? item\r\n\t\t\t: '';\r\n\t\treturn result;\r\n\t});\r\n\r\n\t// Select projects by project category\r\n\t// const selectProjectsByCategory = projects.filter((item) => {\r\n\t// \tlet category =\r\n\t// \t\titem.category.charAt(0).toUpperCase() + item.category.slice(1);\r\n\t// \treturn category.includes(selectProject);\r\n\t// });\r\n\r\n\treturn (\r\n\t\t<ProjectsContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tprojects,\r\n\t\t\t\tsetProjects,\r\n\t\t\t\tsearchProject,\r\n\t\t\t\tsetSearchProject,\r\n\t\t\t\tsearchProjectsByTitle,\r\n\t\t\t\tselectProject,\r\n\t\t\t\tsetSelectProject,\r\n\t\t\t\t// selectProjectsByCategory,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</ProjectsContext.Provider>\r\n\t);\r\n};\r\n","import ProjectsGrid from '../components/projects/ProjectsGrid';\r\nimport { ProjectsProvider } from '../context/ProjectsContext';\r\n\r\nconst Projects = () => {\r\n\treturn (\r\n\t\t<ProjectsProvider>\r\n\t\t\t<div className=\"container mx-auto\">\r\n\t\t\t\t<ProjectsGrid />\r\n\t\t\t</div>\r\n\t\t</ProjectsProvider>\r\n\t);\r\n};\r\n\r\nexport default Projects;\r\n"],"names":["_ref","title","category","image","link","id","avaliable","des","_jsx","motion","div","initial","opacity","animate","delay","transition","ease","duration","children","href","target","className","_jsxs","onClick","Swal","icon","text","timer","background","localStorage","getItem","color","handleAvaliable","ProjectsGrid","projects","searchProject","setSearchProject","searchProjectsByTitle","selectProject","setSelectProject","useContext","ProjectsContext","FiSearch","onChange","e","value","name","type","required","placeholder","map","project","ProjectSingle","img","projectsData","ProjectHeader","publishDate","tags","WebImage1","createContext","ProjectsProvider","props","setProjects","useState","filter","item","toLowerCase","includes","Provider","Projects"],"sourceRoot":""}